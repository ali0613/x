name: 发布iOS越狱插件

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        
      - name: 设置构建环境
        run: |
          sudo apt-get update
          sudo apt-get install -y curl wget git make clang unzip bzip2 fakeroot dpkg dpkg-dev ldid
          
      - name: 设置Theos环境
        run: |
          # 创建Theos目录
          mkdir -p $GITHUB_WORKSPACE/theos
          # 克隆最新的Theos
          git clone --recursive https://github.com/theos/theos.git $GITHUB_WORKSPACE/theos
          # 安装SDKs
          mkdir -p $GITHUB_WORKSPACE/theos/sdks
          # 下载iPhoneOS SDK (16.2版本，可根据需要更改)
          wget https://github.com/xybp888/iOS-SDKs/archive/master.zip -O sdks.zip
          unzip sdks.zip
          cp -r iOS-SDKs-master/iPhoneOS16.2.sdk $GITHUB_WORKSPACE/theos/sdks/
          # 设置环境变量
          echo "THEOS=$GITHUB_WORKSPACE/theos" >> $GITHUB_ENV
          echo "PATH=$GITHUB_WORKSPACE/theos/bin:$PATH" >> $GITHUB_ENV
      
      - name: 构建项目
        run: |
          # 确保Makefile包含rootless配置
          echo "验证Makefile中的rootless配置:"
          grep -E "THEOS_PACKAGE_SCHEME.*rootless" Makefile || echo "警告：Makefile中可能缺少rootless配置"
          
          # 构建项目 - 显式设置rootless方案
          make package THEOS=$GITHUB_WORKSPACE/theos THEOS_PACKAGE_DIR_NAME=build THEOS_PACKAGE_SCHEME=rootless
          
          # 获取版本号
          VERSION=$(echo ${{ github.ref_name }} | sed 's/^v//')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          
          # 重命名deb文件，添加版本号和rootless标识
          find build -name "*.deb" -exec mv {} build/x-rootless-$VERSION.deb \;
      
      - name: 创建发布
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: 版本 ${{ env.VERSION }} (Rootless)
          draft: false
          prerelease: false
          files: build/*.deb
          body: |
            ## iOS越狱插件 v${{ env.VERSION }} (Rootless)
            
            ### 更新内容
            * 自动构建的Rootless越狱兼容版本
            
            ### 安装说明
            1. 下载deb文件到已越狱的iOS设备（需要Rootless越狱，如palera1n等）
            2. 使用Sileo或Filza文件管理器安装deb文件
            3. 重启目标应用
            
            ### 兼容性
            * 支持iOS 14.0及以上版本
            * 仅适用于Rootless越狱环境 