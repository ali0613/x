name: 构建 deb 文件

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: 检查缓存
        run: |
          echo upstream_heads=`git ls-remote https://github.com/roothide/theos | head -n 1 | cut -f 1`-`git ls-remote https://github.com/theos/sdks | head -n 1 | cut -f 1` >> $GITHUB_ENV

      - name: 使用缓存
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/theos
          key: ${{ runner.os }}-${{ env.upstream_heads }}

      - name: 准备 Theos
        uses: huami1314/theos-action@main

      - name: 设置 GNU Make
        run: |
          echo "$(brew --prefix)/opt/make/libexec/gnubin" >> $GITHUB_PATH

      - name: 构建插件
        run: |
          # 确保环境正确
          echo "当前目录: $(pwd)"
          echo "工作空间: ${{ github.workspace }}"
          
          # 构建三种类型的包
          make package FINALPACKAGE=1 -j$(sysctl -n hw.ncpu)
          make package THEOS_PACKAGE_SCHEME=rootless FINALPACKAGE=1 -j$(sysctl -n hw.ncpu)
          make package THEOS_PACKAGE_SCHEME=roothide FINALPACKAGE=1 -j$(sysctl -n hw.ncpu)
          
          # 检查生成的文件
          echo "查找所有deb文件："
          find ${{ github.workspace }} -name "*.deb" -type f
          
          # 检查根目录
          echo "根目录文件列表："
          ls -la

      - name: 上传 Deb 文件
        uses: actions/upload-artifact@v4
        with:
          name: x
          path: |
            *.deb
            packages/*.deb 
